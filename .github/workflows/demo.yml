# Example workflow using Arm Virtual Hardware (AVH) target
# See https://avh.arm.com for more info
# 
# You will need an Arm Virtual Hardware login to run successfully
# To generate API_TOKEN, go to Profile > API > Generate in AVH browser window.
# Recommended to specify as API_TOKEN secret
#
# See also cicd_demo directory

name: Run STM32U5 Webserver

on:
    push:
    # pull_request:
    workflow_dispatch:

concurrency:
    group: ${{ github.ref }}-${{ github.workflow }}-${{ (github.event_name == 'pull_request' && github.event.number) || (github.event_name == 'workflow_dispatch' && github.run_number) || github.sha }}
    cancel-in-progress: true

jobs:
    rebuild:
        runs-on: ubuntu-latest
        steps:
          - name: rebuild example
            run: |
              echo Example in Projects/B-U585I-IOT02A/Demonstrations/IOT_HTTP_WebServer/MDK-ARM
              echo requires license for Arm Compiler
              echo for now can be rebuilt off-line with Keil MDK or cbuild.sh
              echo My repo contains new pre-built image
              echo MDK-ARM/STM32CubeU5_Demo_U585I-IOT02A/Exe/STM32CubeU5_Demo_U585I-IOT02A.axf
              # cd Projects/B-U585I-IOT02A/Demonstrations/IOT_HTTP_WebServer/MDK-ARM
              # cbuild.sh STM32CubeU5_Demo_U585I-IOT02A.STM32CubeU5_Demo_U585I-IOT02A.cprj
        
    avh-test:
        runs-on: ubuntu-latest
        needs: rebuild
        env:
          ENDPOINT: https://app.avh.arm.com/api
          API_ENDPOINT: https://app.avh.arm.com/api
          API_TOKEN: ${{ secrets.API_TOKEN }} 
        steps:
          - name: clone repo
            uses: actions/checkout@v2
                                    
          - name: Get OpenVPN websockets and other dependencies
            run: |
                sudo apt-get -y update
                sudo apt -y install openvpn sshpass curl jq
                pip install websockets asyncio

          - name: install node
            uses: actions/setup-node@v3
            with:
              node-version: 16

          - name: node dependencies
            run: |
              npm install @arm-avh/avh-api
              npm install mocha
              npm install split2
              npm install websocket-stream
              npm install promise-socket
              
          - name: sensor cicd demo
            run: |
              cp Projects/B-U585I-IOT02A/Demonstrations/IOT_HTTP_WebServer/MDK-ARM/STM32CubeU5_Demo_U585I-IOT02A/Exe/STM32CubeU5_Demo_U585I-IOT02A.axf cicd_demo/demo.axf
              cd cicd_demo
              mkdir test
              cp example-sensor-test.js test/index.js
              cd test
              export REPORT_PATH=report.json
              # ignore return code 1
              npm run test || code=$?; if [[ $code -ne 1 && $code -ne 0 ]]; then exit $code; fi    
              